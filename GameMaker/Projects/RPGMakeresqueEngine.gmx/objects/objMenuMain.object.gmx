<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>objMenuParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Chooser

_chooser = chooser_create("Inventory", "Load", "Quit");
var h = 128 + 16;
chooser_set_window_properties(_chooser, 32, 32, h, h * 3/4);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Util

_choiceIndex = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Chooser transition

// Closing
if transition_is_open(_chooser._transition) &amp;&amp; (transition_is_closing(_transition) || transition_is_closed(_transition)) {
    chooser_close(_chooser);
}

// Opening
if transition_is_closed(_chooser._transition) &amp;&amp; (transition_is_opening(_transition)/* || transition_is_open(_transition)*/) {
    chooser_open(_chooser);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Chooser selection

if chooser_get_selected(_chooser) != -1 {
    switch chooser_get_selected(_chooser) {
        case 0:
            // Inventory
            menu_sub_open_next(MENU_SYSTEM._menuInventory);
            break;
        case 1:
            // Load
            show_message("Loading, I don't know yet :/");
            break;
        case 2:
            // Quit
            game_end();
            break;
    }
    // Reset the chooser so we're not in an infinite loop
    chooser_close(_chooser);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw window and stuff with transitions
draw_reset();

d3d_transform_stack_push();

// If we're opening or closing, apply some magic effects.
var sqrCurve = curve_up_poly(transition_get_progress_updown(_transition), 1, 2);

var realAlpha = sqrCurve;

// Darken the screen behind the gui
/*
draw_set_alpha(realAlpha * 0.6);
draw_set_color(c_black);
draw_rectangle(0, 0, WINDOW_WIDTH, WINDOW_HEIGHT, false);
*/

var padding = 16;

// Draw character window
draw_set_alpha(realAlpha * 0.8); // Window transparancy is 0.8 now.
var xa = _chooser._window_xpos + _chooser._window_width + padding,
    ya = _chooser._window_ypos;
var w = WINDOW_WIDTH - xa - 2*padding,//2*xa,
    h = _chooser._window_height;//(WINDOW_HEIGHT - 2*ya) / 4;


//draw_set_alpha(0.1);
//show_debug_message("[objMainMenu draw GUI] alpha1: " + string(draw_get_alpha()));

draw_window(xa, ya, w, h, draw_get_alpha());

// Draw player profile (This assumes the sprite is a square).
draw_sprite_stretched_ext(sprCharacterProfile, 0, xa + padding, ya + padding, h - 2*padding, h - 2*padding, c_white, draw_get_alpha());
draw_set_font(font_menu);
draw_text_colour(xa + h - 2*padding + padding, ya + padding, objPlayer._name, c_white, c_white, c_white, c_white, draw_get_alpha());
// Useless HP Bar (for the RPGMaker Vibes)
draw_text_colour(xa + h - 2*padding + padding, ya + padding + font_get_size(font_menu) + 16, "HP:   10  / 10", c_white, c_white, c_white, c_white, draw_get_alpha());
draw_sprite_ext(sprUselessHPBar,0, xa + h - 2*padding + padding, ya + padding*2 + 2*font_get_size(font_menu) + 16+4, 1, 1, 0, c_white, draw_get_alpha());

d3d_transform_stack_pop();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
