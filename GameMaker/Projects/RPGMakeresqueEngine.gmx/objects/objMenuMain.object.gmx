<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>objDialogueHandlerParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///^ NOTE: We inherit an object used for dialogue! Exercise caution.
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Inherited durations
_transitionOpenDuration = 20;
_transitionCloseDuration = 20;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Press back to close menu
if  _active &amp;&amp; _state != DIALOGUE_STATE.CLOSING &amp;&amp; _transitionCounter &gt; 1 {
    // By checking the transition counter, we don't close instantaniously.
    if keyboard_check_pressed( input_get("back") ) {
        menu_close_ext(id);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// If Finished
if (_active &amp;&amp; game_get_state() == GAME_STATE.MENU) {
    if _finished {
        _active = false;
        game_set_state(GAME_STATE.GAME);
    }
}

show_debug_message("[objMenuMain Begin Step 3] " + string(_transitionCounter));

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw window and stuff with transitions
draw_reset();

d3d_transform_stack_push();

// If we're opening or closing, apply some magic effects.
switch _state {
    case DIALOGUE_STATE.OPENING:
        var sqrCurve =  curve_up_poly(_transitionCounter, _transitionOpenDuration, 2);
        // Alpha to the mix
        draw_set_alpha(sqrCurve);
        break;

    case DIALOGUE_STATE.CLOSING:
        var cubeCurve = curve_down_poly(_transitionCounter, _transitionCloseDuration, 0.3);
        // Alpha to the mix
        draw_set_alpha(cubeCurve);
        break;
}

var realAlpha = draw_get_alpha();

// Darken the screen behind the gui
draw_set_alpha(realAlpha * 0.4);
draw_set_color(c_black);
draw_rectangle(0, 0, WINDOW_WIDTH, WINDOW_HEIGHT, false);

// Draw character window
draw_set_alpha(realAlpha * 0.8); // Window transparancy is 0.8 now.
var xa = 32,
    ya = 32;
var w = WINDOW_WIDTH - 2*xa,
    h = (WINDOW_HEIGHT - 2*ya) / 4;
var padding = 16;

draw_window(xa, ya, w, h, draw_get_alpha());
// Draw player profile (This assumes the sprite is a square).
draw_sprite_stretched_ext(sprCharacterProfile, 0, xa + padding, ya + padding, h - 2*padding, h - 2*padding, c_white, draw_get_alpha());
draw_set_font(font_menu);
draw_text_color(xa + h - 2*padding + padding, ya + padding, objPlayer._name, c_white, c_white, c_white, c_white, draw_get_alpha());
// Useless HP Bar (for the RPGMaker Vibes)
draw_text_color(xa + h - 2*padding + padding, ya + padding + font_get_size(font_menu) + 16, "HP:   10  / 10", c_white, c_white, c_white, c_white, draw_get_alpha());
draw_sprite_ext(sprUselessHPBar,0, xa + h - 2*padding + padding, ya + padding*2 + 2*font_get_size(font_menu) + 16+4, 1, 1, 0, c_white, draw_get_alpha());

d3d_transform_stack_pop();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
