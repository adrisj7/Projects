<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Choice variables

// DS List of all of our choice strings
_choice = 0;

// The index of our currently selected choice
_selected = 0;

// The final value that we have selected once we confirm our selection.
// If -1, it indicates that we haven't selected yet.
_selectedFinal = -1;

// The text to display above the choice
_text = "";
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Transition
_transition = transition_create(11, 8);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Visual
_choiceCounter = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Window variables

// Constants
_window_min_width = 100;
_window_min_height = 100;
_window_text_buffer = 12;
_window_center_ypos = WINDOW_HEIGHT/2 - 24;

// SET THESE in the constructor (dialogue_choice_create... )
_window_xpos = -1;
_window_ypos = -1;
_window_width = -1;
_window_height = -1;

_top_text_height = -1;
_max_text_width = -1;//_window_width - 2*_window_text_buffer;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Transition
transition_update(_transition);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set visible
visible = ! transition_is_closed(_transition);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Choice Scroll
if transition_is_open(_transition) {
    var scrolled = false;
    if keyboard_check_pressed( input_get("down") ) {
        _selected++;
        scrolled = true;
    }
    if keyboard_check_pressed( input_get("up") ) {
        _selected--;
        scrolled = true;
    }
    if scrolled {
        _choiceCounter = 0; // Just visual
        audio_play_sound(soundMenuBlip, AUDIO_PRIORITY_MENU, false);
    }
    // Wrap selected
    _selected = wrap(_selected, 0, ds_list_size(_choice));

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Selected
if transition_is_open(_transition) &amp;&amp; keyboard_check_pressed( input_get("action") ) {
    transition_close(_transition);
    _selectedFinal = _selected;
    audio_play_sound(soundMenuSelectSoft, AUDIO_PRIORITY_MENU, false);
}

//if _selectedFinal == -1 &amp;&amp; transition_is_closed(_transition) {
//}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Visual stuff
_choiceCounter++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw window with transition

draw_reset();

d3d_transform_stack_push();
d3d_transform_set_identity();

// If we're opening or closing, apply some magic effects.
var progress = transition_get_progress_updown(_transition);

var cubeCurve = curve_up_poly(progress, 1, 0.3),
    sqrCurve  = curve_up_poly(progress, 1, 2);

// Center the window for scaling
d3d_transform_add_translation(0, -_window_height/2, 0);
d3d_transform_add_scaling(1, cubeCurve, 1);
// DeCenter the window
d3d_transform_add_translation(0, _window_height/2, 0);
// Alpha to the mix
draw_set_alpha(sqrCurve);

var realAlpha = draw_get_alpha();
draw_set_alpha(realAlpha * 0.8); // Window transparancy is 0.8 now.

d3d_transform_add_translation(_window_xpos, _window_ypos, 0);

draw_window(0, 0, _window_width, _window_height, draw_get_alpha());

d3d_transform_stack_pop();

draw_recover();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw text and choices

if transition_is_open(_transition) {
    draw_set_font(font_menu);
    draw_reset();
    draw_set_color(c_white);

    // Draw Top Text
    draw_text_ext(
            _window_xpos + _window_text_buffer, 
            _window_ypos + _window_text_buffer,
            _text,
            3 + font_get_size(font_menu),
            _max_text_width
    );

    // Draw Choices
    draw_set_halign(fa_middle);
    for(var i = 0; i &lt; ds_list_size(_choice); i++) {
        var ypos = _window_ypos + _window_text_buffer + _top_text_height + i*(10 + font_get_size(font_menu));
        draw_text(
            _window_xpos + _window_width / 2,
            ypos,
            _choice[| i]
        );

        // Draw selector
        if (_selected == i) {
            var sbuffer = 8;
            var sx = _window_xpos + _window_text_buffer - sbuffer;
            var sy = ypos;// - font_get_size(font_menu)/2 - sbuffer;
            var sw = _window_width - 2*_window_text_buffer + 2*sbuffer;
            var sh = font_get_size(font_menu) + 2*sbuffer;

            draw_window_selector_cycle(sx, sy, sw, sh, _choiceCounter);
        }
    }
    draw_set_halign(fa_left);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
