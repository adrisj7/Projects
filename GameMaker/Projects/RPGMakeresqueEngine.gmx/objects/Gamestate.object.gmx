<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DEBUG
_debug = true;
_debug_overlay = false;

_debug_fps_accumulator = 0;          // Accumulates the real fps each frame
_debug_fps_accumulator_count = 0;    // How many fps's are accumulated
_debug_fps_last_time = current_time; // Last time we calculated average fps
_debug_fps_real_averaged = 0;        // The actual averaged fps_real

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// WINDOW TITLE AND SIZE

// Title
window_set_caption(WINDOW_TITLE);

// Size + view
view_wview = WINDOW_WIDTH;
view_hview = WINDOW_HEIGHT;
window_set_size(WINDOW_WIDTH, WINDOW_HEIGHT);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// STATE

// See game_get_state() for state documentation
enum GAME_STATE {
    GAME,
    TITLE,
    MENU,
    DIALOGUE
};

// TODO: Implement title screen!
_state = GAME_STATE.GAME;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DTIME

_time = 0;
_dtime = 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// SYSTEM INITIALIZATION

VARIABLE_SYSTEM = variable_system_create();
DIALOGUE_SYSTEM = dialogue_system_create();
TILE_COLLISION_SYSTEM = tile_collision_system_create();
OVERLAY_SYSTEM = overlay_create();
CAMERA_SYSTEM = camera_system_create();
MENU_SYSTEM = menu_system_create();
INVENTORY_SYSTEM = inventory_create();

// Dialogue system

DIALOGUE_SYSTEM._dialogues = load_dialogue_file("example");//load_dialogue_file("dialogue");

// Transition system
enum TRANSITION_STATE {
    OPENING,
    OPEN,
    CLOSING,
    CLOSED
}

// Key Input System

INPUT_SYSTEM = input_system_create();

// up down left right
input_put_ext(INPUT_SYSTEM, "up", vk_up);
input_put_ext(INPUT_SYSTEM, "down", vk_down);
input_put_ext(INPUT_SYSTEM, "left", vk_left);
input_put_ext(INPUT_SYSTEM, "right", vk_right);
// action (Z)
input_put_ext(INPUT_SYSTEM, "action", ord("Z"));
// back (x)
input_put_ext(INPUT_SYSTEM, "back", ord("X"));
// run (shift)
input_put_ext(INPUT_SYSTEM, "run", vk_shift);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// SURFACES
SURFACE_WINDOW_MIDDLE = -1;
SURFACE_WINDOW[0] = -1;
SURFACE_WINDOW[1] = -1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// CONTAINERS
DRAW_PARAMETER_CONTAINER = ds_map_create();
DRAW_PARAMETER_CONTAINER[? "alpha"] = stack_create();
DRAW_PARAMETER_CONTAINER[? "color"] = stack_create();
stack_push(DRAW_PARAMETER_CONTAINER[? "alpha"], 1);
stack_push(DRAW_PARAMETER_CONTAINER[? "color"], c_white);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>222</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_next_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Testing only

if game_is_debug() {
    inventory_add_item(ITEM.SWORD);
    inventory_add_item(ITEM.EXAMPLE_ITEM);
    inventory_add_item(ITEM.EXAMPLE_ITEM);
    inventory_add_item(ITEM.SWEET_BREAD);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Dtime
_time += _dtime;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DEBUG ONLY
if game_is_debug() {

    if (keyboard_check_pressed(vk_f3)) {
        _debug_overlay = !_debug_overlay;
    }
    // EDITORS
    if game_is_debug_overlay() {
        if keyboard_check_pressed(ord("D")) {
            // Open up the Dialogue editor!
            instance_deactivate_all(true);
            room_goto(roomDialogueEditor);
        }
        if keyboard_check_pressed(ord("T")) {
            // Open up the Tileset editor!
            instance_deactivate_all(true);
            instance_activate_object(objTileCollisionSystem);
            room_goto(roomTilesetEditor);
        }
    }

    // AVERAGE real_fps:
    _debug_fps_accumulator += fps_real;
    _debug_fps_accumulator_count ++;
    if (current_time - _debug_fps_last_time &gt; 1000) {
        _debug_fps_real_averaged = _debug_fps_accumulator / _debug_fps_accumulator_count;
        _debug_fps_accumulator = 0;
        _debug_fps_accumulator_count = 0;
        _debug_fps_last_time = current_time;
    }

    window_set_caption(WINDOW_TITLE + " " 
                     + string(GM_version) 
                     + ", (FPS | FPS_REAL) : (" + string(fps) 
                     + " | " + string(_debug_fps_real_averaged)
                     + ")"
                     );
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Testing only

if game_is_debug() {
    if keyboard_check_pressed(vk_tab) {
        dialogue_file_start_dialogue("Example");
        //dialogue_file_start_dialogue("Dialogue");
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="74">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Global GUI Settings
//show_debug_message(string(display_get_gui_width()) + ", " + string(display_get_gui_height()));
display_set_gui_size(view_wport * WINDOW_WIDTH / 640, view_hport * WINDOW_HEIGHT / 480);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Surface recreation
if !surface_exists(SURFACE_WINDOW_MIDDLE) {
    SURFACE_WINDOW_MIDDLE = surface_create(1024, 1024);
    surface_set_target(SURFACE_WINDOW_MIDDLE);
        draw_reset();
        draw_clear_alpha(c_black, 0);
        draw_sprite_part_tiled(sprWindow, 0, 0, 32, 32, 32, 1024, 1024, 0, 0);
    surface_reset_target();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DEBUG ONLY

if game_is_debug() {
    draw_set_font(font_debug);    
    draw_reset();

    //draw_surface(SURFACE_WINDOW_MIDDLE, 20, 20);
    //draw_window_selector(100, 100, 200, 200, 0.9);

    if (game_is_debug_overlay()) {
        draw_set_color(c_green);
        draw_text(0, WINDOW_HEIGHT - 12, "Debug Overlay (F3): ON");

        draw_text(0, WINDOW_HEIGHT - 24, "D: Dialogue Editor");
    } else {
        draw_set_color(c_ltgray);
        draw_text(0, WINDOW_HEIGHT - 12, "(F3): OFF");
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
