<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>objMenuParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Inventory Util

_selected = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Visual
_selectCounter = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Moving in the inventory

if transition_is_open(_transition) {
    var prevSelected = _selected;
    // Note: This assumes a 2 by x grid.
    if keyboard_check_pressed( input_get("down") ) {
        if (_selected &lt; inventory_get_size() - 1)
            _selected += 2;
    }
    if keyboard_check_pressed( input_get("up") ) {
        if (_selected &gt; 1)
        _selected-= 2;
    }
    if keyboard_check_pressed( input_get("right") ) {
        if _selected % 2 == 0 {
            _selected++;
        }
    }
    if keyboard_check_pressed( input_get("left") ) {
        if _selected % 2 == 1 {
            _selected--;
        }
    }
    // Wrap selected
    _selected = wrap(_selected, 0, inventory_get_size());
    if prevSelected != _selected {
        audio_play_sound(soundMenuBlip, AUDIO_PRIORITY_MENU, false);
    }

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Using items

if transition_is_open(_transition) &amp;&amp; keyboard_check_pressed( input_get( "action") ) {
    var item = inventory_get_item(_selected);
    // If we return something, that means the item is used!
    if (item_use(item) != -1) {
        transition_close(_transition);
        menu_close();
    }
    audio_play_sound(soundMenuSelectSoft, AUDIO_PRIORITY_MENU, false);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Visual stuff
_selectCounter++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw window and stuff with transitions
draw_reset();
draw_set_font(font_menu);

d3d_transform_stack_push();

// If we're opening or closing, apply some magic effects.
var sqrCurve = curve_up_poly(transition_get_progress_updown(_transition), 1, 2);

var realAlpha = sqrCurve;

var padding = 16;

// Draw item description window
draw_set_alpha(realAlpha * 0.8); // Window transparancy is 0.8 now.
var xa = 32,
    ya = 32;
var w = WINDOW_WIDTH - 2*xa,
    h = (WINDOW_HEIGHT - 2*ya) / 4;

// Item description window
draw_window(xa, ya, w, h, draw_get_alpha());

var itemSelected = inventory_get_item(_selected);

if itemSelected != -1 {
    // Item description
    draw_text_ext(xa + padding, ya + padding, item_get_description(itemSelected), font_get_size(font_menu), w - 2*padding);
}

// Inventory selector
ya += h + padding;
h = 128;//WINDOW_HEIGHT - ya - padding - 32;

// Inventory selector window
draw_window(xa, ya, w, h, draw_get_alpha());

if transition_is_open(_transition) {
    // Draw item descriptions and hovering box thing
    for(var i = 0; i &lt; inventory_get_size(); i++) {
        // Get a grid thing going
        var dx = i % 2,
            dy = floor(i / 2);
        var tw = (w - 2*padding) / 2,
            th = 4 + font_get_size(font_menu) + padding;
        dx *= tw;
        dy *= th;
        dx += padding;
        dy += padding;
        // Draw item name
        draw_text(xa + dx, ya + dy, item_get_name(inventory_get_item(i)));
        // Draw item count
        var count = inventory_get_item_count(i);
        if (count &gt; 1) {
            draw_set_halign(fa_right);
            draw_text(xa + dx + tw - padding, ya + dy, "(x " + string(count) + ")");
            draw_set_halign(fa_left);
        }
    
        // If our selector is here:
        if i == _selected {
            draw_window_selector_cycle(xa + dx, ya + dy, tw, th - 4, _selectCounter);
        }
    }
}

d3d_transform_stack_pop();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
