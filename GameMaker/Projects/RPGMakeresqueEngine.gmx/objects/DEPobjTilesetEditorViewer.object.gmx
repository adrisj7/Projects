<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Util variables

// Mouse tile select
_mouseSelectX = -1;
_mouseSelectY = -1;

// Purely visual
_lineCounter = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Button

_saveButton = editor_button_create(16, 400, 6, ord("S"), true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Mouse select

var mx = editor_get_mouse_x(false),
    my = editor_get_mouse_y(false);

var relativeX = mx - x,
    relativeY = my - y;

_mouseSelectX = floor(relativeX / TILE_WIDTH);
_mouseSelectY = floor(relativeY / TILE_HEIGHT);

// NOTE: Does not handle if too far to the right/down.
if (_mouseSelectX &lt; 0 || _mouseSelectY &lt; 0) {
    _mouseSelectX = -1;
    _mouseSelectY = -1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Mouse click
if _mouseSelectX != -1 &amp;&amp; _mouseSelectY != -1 &amp;&amp; mouse_check_button_pressed(mb_left) {
    var bg = DEPtileset_editor_get_current_tileset();
    var buffer = DEPtileset_get_collision_buffer(bg);
    var value = DEPtileset_collision_buffer_get(buffer, bg, _mouseSelectX, _mouseSelectY);
    if (value &gt; 127) {
        value = 0;
    } else {
        value = 255;
    }
    DEPtileset_collision_buffer_set(buffer, bg, _mouseSelectX, _mouseSelectY, value);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Purely visual
_lineCounter++;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Save button

if editor_is_button_pressed(_saveButton) {

    var bg = DEPtileset_editor_get_current_tileset();
    var buffer = DEPtileset_get_collision_buffer(bg);
    DEPtileset_save_collision_buffer(bg, buffer);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw background, grid, mouse select ect.

var bg = DEPtileset_editor_get_current_tileset();

editor_apply_view_transformation();

// Draw the background
draw_background(bg, x, y);

// Draw dotted line things
draw_set_color(c_white);
var dottedPhase = 6 * _lineCounter / 60;
for(var xa = 0; xa &lt; background_get_width(bg); xa += TILE_WIDTH) {
    editor_draw_dotted_vertical_line(x + xa, y - 4, y + background_get_height(bg) + 4, dottedPhase);
}
for(var ya = 0; ya &lt; background_get_height(bg); ya += TILE_HEIGHT) {
    editor_draw_dotted_horizontal_line(x - 4, x + background_get_width(bg) + 4, y + ya, dottedPhase);
}

// Draw mouse select
if _mouseSelectX != -1 &amp;&amp; _mouseSelectY != -1 {
    var sx = x + _mouseSelectX*TILE_WIDTH;
    var sy = y + _mouseSelectY*TILE_HEIGHT;
    draw_set_alpha(0.3);
    draw_set_color($0081ea);
    draw_rectangle(sx, sy, sx+TILE_WIDTH, sy+TILE_HEIGHT, false);
    draw_set_alpha(1);
}

// Draw collision icons
var buffer = DEPtileset_get_collision_buffer(bg);
for(var xa = 0; xa &lt; DEPtileset_get_collision_buffer_width(bg); xa++) {
    for(var ya = 0; ya &lt; DEPtileset_get_collision_buffer_height(bg); ya++) {
        var collideable = DEPtileset_collision_buffer_get(buffer, bg, xa, ya) &gt; 127;
        if collideable {
            draw_sprite(sprTilesetEditorCollisionMark, 0, x+(xa+0.5)*TILE_WIDTH,y+(ya+0.5)*TILE_HEIGHT);
        }
    }
}

d3d_transform_set_identity();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
