<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprNoteEditorAll</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Note properties

// What kind of note are we?
enum NOTE_TYPE {
    EMPTY,      // Does Nothing
    TEXT,       // Just a simple text dialogue
    DIALOGUE,   // A full dialogue
    LOCKED,     // Door Locked
    SOUND,      // A Yumme Nikki-esque Sound thing
}

_type = NOTE_TYPE.EMPTY;
_direction = -1;     // The direction we need to face to activate the note. -1 means any direction.

// Extra data
_data = ds_map_create();
//_noteText = "";      // Note text, for quick notes.
//_dialogueFile = -1;  // Dialogue file, for actual dialogues.
//_dialogueID = -1;    // Dialogue,      for actual dialogues.
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Util
_active = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// We're active again

_active = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// If facing and action, trigger!

if _active &amp;&amp; game_get_state() == GAME_STATE.GAME {
    if  _direction == -1 || objPlayer._facing == _direction {
        if keyboard_check_pressed( input_get("action") ) {
            event_user(0);
        }
    }
} else if _active &amp;&amp; alarm[0] == -1 {
    // DELAY after letting go, to make sure we don't get caught in a loop
    alarm[0] = 5;
    _active = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Trigger note

switch _type {
    case NOTE_TYPE.EMPTY:
        break;
    case NOTE_TYPE.TEXT:
        var text = _data[? "text"];
        dialogue_start_dialogue_text(text);
        break;
    case NOTE_TYPE.DIALOGUE:
        var dialogueFile = _data[? "dialogueFile"];
        var dialogueID   = _data[? "dialogueID"];
        dialogue_file_start_dialogue(dialogueFile, dialogueID);
        break;
    case NOTE_TYPE.LOCKED:
        // TODO: Add a player animation!
        dialogue_start_dialogue_text("It's locked");
        break;
    case NOTE_TYPE.SOUND:
        // TODO: Implement me!
        break;
    default:
        show_error("Note unimplemented type: " + string(_type) + ".", false);
        break;
}

/*
if _dialogueFile != -1 &amp;&amp; _dialogueID != -1 {
    dialogue_file_start_dialogue(_dialogueFile, _dialogueID);
} else if _noteText != "" {
    dialogue_start_dialogue_text(_noteText);
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
