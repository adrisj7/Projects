<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>__YUMEngineMenuParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Openers

var desc_height = 32;

_opener_description = dialogue_opener_create(0, 0, view_wview[0], desc_height);
_opener_slots       = dialogue_opener_create(0, desc_height, view_wview[0], view_hview[0] - desc_height);

dialogue_opener_set_open_duration( _opener_description, 0);
dialogue_opener_set_close_duration(_opener_description, 0);
dialogue_opener_set_open_duration( _opener_slots, 0);
dialogue_opener_set_close_duration(_opener_slots, 0);


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Selection and Slots util

// What selection we're on
_selection_index = 0;

// Timer while we're selecting
_selection_timer = 0;

// How many slots we get per row,
// or how many columns we have in our inventory system
_columns = 2;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Openers
// TODO: Custom method?

dialogue_opener_set_open_auto(_opener_description, _active);
dialogue_opener_set_open_auto(_opener_slots, _active);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Input
if _active &amp;&amp; !__menu_is_fading() {
    ++_selection_timer;

    var axis_x = __dialogue_check_right() - __dialogue_check_left();
    var axis_y = __dialogue_check_down() - __dialogue_check_up();

    var delta = axis_x + axis_y * _columns;

    var new = _selection_index + delta;

    // Actually move. Play sound effect here
    if new != _selection_index &amp;&amp; 0 &lt;= new &amp;&amp; new &lt; inventory_get_count() {
        _selection_index = new;
    }


    if __dialogue_check_progress_pressed() {
        // Selection. Load up the script and start the next menu,
        //            which will run the script
        var type = inventory_get(_selection_index);
        if item_type_exists(type) &amp;&amp; item_type_get_useable(type) {
            var scr = item_type_get_script(type);
            if scr != noone &amp;&amp; !script_exists(scr) {
                show_error("aw fuk, don't use lambdas" + string(scr), true);
            }
            __menu_set_script(scr);
            __menu_stack_pop_all();
            menu_open(MenuType.Script);
        }
    } else if __dialogue_check_cancel_pressed() {
        // Cancelling
        menu_close();
    }
} else {
    _selection_timer = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Description

display_set_gui_size(view_wview[0], view_hview[0]);

var type = inventory_get(_selection_index);
if item_type_exists(type) {
    var desc = item_type_get_description(type);
    var xpos = dialogue_opener_get_window_x(_opener_description) + dialogue_get_text_padding_x(),
        ypos = dialogue_opener_get_window_y(_opener_description) + dialogue_get_text_padding_y();
    dialogue_draw_text(xpos, ypos, desc);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Slots and Selector

var tx = dialogue_opener_get_window_x(_opener_slots) + dialogue_get_text_padding_x(),
    ty = dialogue_opener_get_window_y(_opener_slots) + dialogue_get_text_padding_y();
var w =  dialogue_opener_get_window_width(_opener_slots);
var bump = dialogue_get_selection_bump();
var text_height = string_height("A");

var dw = (w - 2*bump) / 2 + bump;
var dh = text_height + dialogue_get_text_spacing();

var select_width = dw + 2*bump - 16;

for (var i = 0; i &lt; inventory_get_count(); ++i) {
    var xslot = i % _columns,
        yslot = floor(i / _columns);
    var dx = tx + xslot * dw + bump,
        dy = ty + yslot * dh;
    var type = inventory_get(i);
    
    var text = item_type_get_name(type);
    var count = ":  " + string(inventory_get_quantity(i));
    if !item_type_get_useable(type) {
        text  = "\C[7]" + text;
        count = "\C[7]" + count;
    }
    draw_set_font(dialogue_get_default_font());
    dialogue_draw_text(dx, dy, text);
    dialogue_draw_text(dx + select_width - string_width(":  1") - 8, dy, count);

    // Cursor
    if i == _selection_index {
        dialogue_draw_cursor_timed(dx - bump, dy - bump, select_width, text_height + 2*bump, _selection_timer);
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
