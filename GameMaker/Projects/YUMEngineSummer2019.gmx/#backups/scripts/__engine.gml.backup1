// 2019-06-04 12:20:02
#define __engine
/// Engine!
    /*
     *      This is the Engine running in the background, controlling the
     *      RPG elements of the game.
     */
    
    // Make sure the engine is initialized
    gml_pragma("global", "__create_systems()");


#define __create_systems
/// __create_systems()
    // Create all the necessary systems in the game

    var start = room_first;
    // if room_get_name(start) != "room_YUMEngine_init" {
    //     show_error("Invalid starting room: " + room_get_name(start) 
    //              + ". Please set it to room_YUMEngine_init!", true);
    // }
    // room_instance_add(start, 0, 0, __YUMEngineGamestate);
    // room_instance_add(start, 0, 0, __YUMEngineDialogueSystem);
    // room_instance_add(start, 0, 0, __YUMEngineMenuSystem);


#define __get_gamestate
/// __get_gamestate()
    // returns our gamestate, creating a new one if it's not initialized yet
    return singleton_get(__YUMEngineGamestate);


#define yumengine_begin
/// yumengine_begin()
    // Starts the YUMEngine game
    if yumengine_is_running() {
        return -1;
    }
    var sys = __get_gamestate();
    sys._running = true;


#define yumengine_is_running
/// yumengine_is_running()
    var sys = __get_gamestate();
    return sys._running;